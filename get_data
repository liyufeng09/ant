#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include "greedy.h"

int data[CITY_COUNT][REQ_COUNT];
int cost[CITY_COUNT];
int require[REQ_COUNT];
int path[CITY_COUNT];
int coverage[CITY_COUNT];

int main(int argc,char* argv[])
{
    int cover=0;
    memset(require,0,sizeof(require));//0表未满足，1表满足
    memset(path,0,sizeof(path));//0表未被选择，1表选中

    get_data();
    int next=0;
    while(cover<REQ_COUNT)
    {
        get_cover();
        next=get_next();
        path[next]=1;
        cover=fresh(next);
    }
    int result=0;
    for(int i=0; i++; i<CITY_COUNT)
    {
        if(path[i]==1)
        {
            result=result+cost[i];
        }
    }
    printf("the final result is %d\n",result);
}

void get_cover()
{
    memset(coverage,0,CITY_COUNT*sizeof(int));
    for(int i=0; i<CITY_COUNT; i++)
        for(int j=0; j<REQ_COUNT; j++)
        {
            if(data[i][j]>0 && require[j]==0)
            {
                coverage[i]++;
            }
        }
}
int get_next()
{
    int point=-1;
    int maxCov=-1;
    for(int i=0; i<CITY_COUNT; i++)
    {
        if(maxCov<coverage[i])
        {
            maxCov=coverage[i];
            point=i;
        }
    }
    return point;
}

int fresh(int next,int cover)
{
    for(int j=0; j<REQ_COUNT; j++)
    {
        if(data[next][j]>0 && require[j]==0)
        {
            require[j]=1;
            cover++;
        }
    }
    return cover;
}

void get_data()
{
    int n=0;
    FILE *fp=NULL;
    memset(data,0,sizeof(data));
    memset(cost,0,sizeof(cost));
    char *buffer=(char *)malloc(BUF_SIZE*sizeof(char));
    memset(buffer,'\0',1024*sizeof(char));
    char * file_name=(char *)malloc(FILE_NAME*sizeof(char));
    while(n<600)
    {
        memset(file_name,'\0',FILE_NAME);
        sprintf(file_name,"../../Documents/Graduate/siemens2/printtokens/outputs/t%d.c.gcov",n+1);
        fp=fopen(file_name,"r");//Open file
        if(fp==NULL)
        {
            printf("failed to open file:%s.\n",file_name);
            return -1;
        }
        int k=0;
        while(fgets(buffer,1024,fp))//read lines
        {
            int i=0,j=0;
            char num[10];
            memset(num,'\0',10*sizeof(char));
            while(buffer[i])
            {
                if(buffer[i]>='0'&&buffer[i]<='9')
                {
                    num[j]=buffer[i];
                    i++;
                    j++;
                }
                else if(buffer[i]=='#')
                {
                    data[n][k]=0;
                    k++;
                    break;
                }
                else if(buffer[i]=='-')
                {
                    break;
                }
                else if(buffer[i]==':')
                {
                    data[n][k]=atoi(num);
                    k++;
                    break;
                }
                else
                {
                    i++;
                }
            }
        }
        if(fclose(fp)!=0)
        {
            printf("%s close failed.\n",file_name);
        }

        for(int i=0; i<REQ_COUNT; i++)
        {
            cost[n]+=data[n][i];
        }
        printf("cost[%d]=%d\n",n,cost[n]);
        n++;
    }
    free(buffer);
    free(file_name);
}
